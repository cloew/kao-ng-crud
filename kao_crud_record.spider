use angular;
use console;

angular.module('kao.crud.record', ['kao.crud.api', 'kao.crud.frontend', 'kao.loading', 'kao.utils'])
    .factory('KaoRecord', fn($routeParams, CrudApiService, FrontEndCrudService, KaoPromise) {
        var KaoRecord = fn(dataType) {
            if dataType? {
                this.frontEndCrud = FrontEndCrudService.getFrontEndFor(dataType);
            } else {
                this.frontEndCrud = FrontEndCrudService.getCurrentCrud();
            }
            this.crudApi = CrudApiService.getApiFor(this.frontEndCrud.name);
            this.data = {};
        };
          
        KaoRecord.prototype.promiseBuilder = fn(promise) {
            var self = this;
            return KaoPromise(
                promise.success(fn(data) {
                    self.data = data.record;
                }), fn(data) {return self;}
            );
        };
        KaoRecord.prototype.get = fn() {
            return this.promiseBuilder(this.crudApi.get($routeParams.id));
        };
        KaoRecord.prototype.create = fn() {
            return this.promiseBuilder(this.crudApi.create(this.data));
        };
        KaoRecord.prototype.update = fn() {
            return this.promiseBuilder(this.crudApi.update(this.data));
        };
        KaoRecord.prototype.delete = fn() {
            var self = this;
            return KaoPromise(
                this.crudApi.get(this.data.id).success(fn(data) {
                    self.data = {};
                }), fn(data) {return self;}
            );
        };
        
        KaoRecord.prototype.getListUrl = fn() {
            return this.frontEndCrud.getListUrl();
        };
        
        KaoRecord.prototype.getNewUrl = fn() {
            return this.frontEndCrud.getNewUrl();
        };
        KaoRecord.prototype.getEditUrl = fn() {
            return this.frontEndCrud.getEditUrl(this.data.id);
        };
        return KaoRecord;
    });