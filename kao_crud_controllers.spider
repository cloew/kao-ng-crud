use angular;
use console;

angular.module('kao.crud.controllers', ['kao.crud.directives', 'kao.crud.record', 'kao.loading'])
    .directive('kaoCrudList', fn() {
      return {
        restrict: 'E',
        replace: true,
        template:  '<div class="col-md-8 col-md-push-2" style="text-align:center;">
                        <list-header class="col-md-12"></list-header>
                        <loading-div tracker="listTracker">
                            <model-table></model-table>
                        </loading-div>
                    </div>',
        scope: {
            type: '@'
        },
        controller: fn ($scope, $location, LoadingTracker, KaoRecords) {
            var recordsHelper = new KaoRecords($scope.type);
            $scope.listTracker = new LoadingTracker();
            
            $scope.records = [];
            $scope.dataType = recordsHelper.frontEndCrud.name;
            $scope.pluralDataType = recordsHelper.frontEndCrud.pluralName;
            $scope.newUrl = '#'+recordsHelper.frontEndCrud.getNewUrl();
            $scope.tableDirective = recordsHelper.frontEndCrud.tableDirective;
            
            $scope.goTo = fn(path) {
                $location.path(path);
            };
            
            $scope.delete = fn(record) {
                record.delete().success(fn(data) {
                    $scope.getRecords();
                }).error(fn(error) {
                    console.log(error);
                });
            };
            
            $scope.getRecords = fn() {
                $scope.listTracker.load(recordsHelper.all()).success(fn(records) {
                    $scope.records = records;
                }).error(fn(error) {
                    console.log(error);
                });
            };
            $scope.getRecords();
        }
      };
    })
    .directive('kaoCrudNew', fn() {
      return {
        restrict: 'E',
        replace: true,
        template:  '<div class="col-md-8 col-md-push-2" style="text-align:center;">
                        <new-header class="col-md-12"></new-header>
                        <model-form></model-form>
                    </div>',
        scope: {
            type: '@'
        },
        controller: fn ($scope, $location, KaoRecord, LoadingTracker) {
            $scope.record = new KaoRecord($scope.type);
            $scope.dataType = $scope.record.frontEndCrud.name;
            $scope.formDirective = $scope.record.frontEndCrud.formDirective;
            $scope.listUrl = '#'+$scope.record.getListUrl();
            
            $scope.saveTracker = new LoadingTracker();
            
            $scope.save = fn() {
                $scope.saveTracker.load($scope.record.create()).success(fn(record) {
                    $location.path(record.getEditUrl());
                }).error(fn(error) {
                    console.log(error);
                });
            };
        }
      };
    })
    .directive('kaoCrudEdit', fn() {
      return {
        restrict: 'E',
        replace: true,
        template:  '<div class="col-md-8 col-md-push-2" style="text-align:center;">
                        <edit-header class="col-md-12"></edit-header>
                        <model-form></model-form>
                        <dynamic-directive directive="{{afterEditDirective}}"></dynamic-directive>
                    </div>',
        scope: {
            type: '@'
        },
        controller: fn ($scope, $location, $routeParams, KaoRecord, LoadingTracker) {
            $scope.record = new KaoRecord($scope.type);
            $scope.dataType = $scope.record.frontEndCrud.name;
            $scope.formDirective = $scope.record.frontEndCrud.formDirective;
            $scope.afterEditDirective = $scope.record.frontEndCrud.afterEditDirective;
            $scope.listUrl = '#'+$scope.record.getListUrl();
            
            $scope.saveTracker = new LoadingTracker();
            
            
            $scope.goTo = fn(path) {
                $location.path(path);
            };
            
            $scope.save = fn() {
                $scope.saveTracker.load($scope.record.update()).error(fn(error) {
                    console.log(error);
                });
            };
            
            $scope.delete = fn(record) {
                record.delete().success(fn(record) {
                    $scope.goTo(record.getListUrl());
                }).error(fn(error) {
                    console.log(error);
                });
            };
            $scope.record.get().error(fn(error) {
                console.log(error);
            });
        }
      };
    });